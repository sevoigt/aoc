"""day 15"""from collections import OrderedDictdef hash(string):    h = 0    for i in string:        h += ord(i)        h *= 17        h = h % 256    return hfid = open('input.txt')line = fid.read().strip()# part 1p1 = sum([hash(i) for i in line.split(',')])print('result part 1', p1)# part 2steps = line.split(',')boxes = [OrderedDict() for i in range(256)]for i in steps:    if i.endswith('-'):        key = i[:-1]        idx = hash(key)        try:            boxes[idx].pop(key)        except KeyError:            pass    else:        key, focal_length = i.split('=')        idx = hash(key)        focal_length = int(focal_length)        try:            boxes[idx][key] = focal_length        except KeyError:            boxes[idx].update({key: focal_length})p2 = 0for i , box in enumerate(boxes):    for k, val in enumerate(box.values()):        p2 += (i+1) * (k+1) * valprint("result part 2", p2)